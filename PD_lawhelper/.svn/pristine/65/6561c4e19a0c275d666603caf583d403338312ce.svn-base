(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        this.on_create = function()
        {
            // Declare Reference
            var obj = null;
            
            if (Form == this.constructor) {
                this.set_name("V_SCD_001");
                this.set_classname("V_SCD_001");
                this.set_titletext("New Form");
                this.set_name("Schedule");
                this.set_scrollbars("none");
                this._setFormPosition(0,0,350,561);
            }

            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("ds_data", this);
            obj._setContents("<ColumnInfo><Column id=\"COL_D0\" type=\"STRING\" size=\"256\"/><Column id=\"COL_D1\" type=\"STRING\" size=\"256\"/><Column id=\"COL_D2\" type=\"STRING\" size=\"256\"/><Column id=\"COL_D3\" type=\"STRING\" size=\"256\"/><Column id=\"COL_D4\" type=\"STRING\" size=\"256\"/><Column id=\"COL_D5\" type=\"STRING\" size=\"256\"/><Column id=\"COL_D6\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_calendar", this);
            obj._setContents("<ColumnInfo><Column id=\"day0\" type=\"STRING\" size=\"256\"/><Column id=\"day1\" type=\"STRING\" size=\"256\"/><Column id=\"day2\" type=\"STRING\" size=\"256\"/><Column id=\"day3\" type=\"STRING\" size=\"256\"/><Column id=\"day4\" type=\"STRING\" size=\"256\"/><Column id=\"day5\" type=\"STRING\" size=\"256\"/><Column id=\"day6\" type=\"STRING\" size=\"256\"/><Column id=\"hol0\" type=\"STRING\" size=\"256\"/><Column id=\"hol1\" type=\"STRING\" size=\"256\"/><Column id=\"hol2\" type=\"STRING\" size=\"256\"/><Column id=\"hol3\" type=\"STRING\" size=\"256\"/><Column id=\"hol4\" type=\"STRING\" size=\"256\"/><Column id=\"hol5\" type=\"STRING\" size=\"256\"/><Column id=\"hol6\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_menu", this);
            obj._setContents("<ColumnInfo><Column id=\"MENU_NAME\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_SEQ\" type=\"INT\" size=\"4\"/><Column id=\"MENU_OPTP\" type=\"STRING\" size=\"32\"/><Column id=\"PAGE_URL\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_TOP\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_ID\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_GRP\" type=\"STRING\" size=\"32\"/><Column id=\"CREATE_DT\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_LEVEL\" type=\"INT\" size=\"4\"/><Column id=\"PAGE_ID\" type=\"STRING\" size=\"32\"/><Column id=\"PAGE_NAME\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_ARGS\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_STAT\" type=\"STRING\" size=\"32\"/><Column id=\"CREATE_USER\" type=\"STRING\" size=\"32\"/><Column id=\"UPDATE_DT\" type=\"STRING\" size=\"32\"/><Column id=\"UPDATE_USER\" type=\"STRING\" size=\"32\"/><Column id=\"MENU_DESC\" type=\"STRING\" size=\"32\"/></ColumnInfo>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_todaysschedule", this);
            obj.set_firefirstcount("0");
            obj.getSetter("firenextcount").set("0");
            obj.set_useclientlayout("false");
            obj.set_updatecontrol("true");
            obj.set_enableevent("true");
            obj.set_loadkeymode("keep");
            obj.set_loadfiltermode("keep");
            obj.set_reversesubsum("false");
            obj._setContents("<ColumnInfo><Column id=\"Column0\" type=\"STRING\" size=\"256\"/><Column id=\"Column1\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"Column1\">가나다라마</Col><Col id=\"Column0\">URL('img::icon_MF_List01.png')</Col></Row><Row><Col id=\"Column1\">가나다라마바사</Col><Col id=\"Column0\">URL('img::icon_MF_List02.png')</Col></Row><Row><Col id=\"Column1\">가나다라마바사아</Col><Col id=\"Column0\">URL('img::icon_MF_List01.png')</Col></Row><Row><Col id=\"Column1\">가나다라마바사아자</Col><Col id=\"Column0\">URL('img::icon_MF_List01.png')</Col></Row><Row><Col id=\"Column1\">가나다라마</Col><Col id=\"Column0\">URL('img::icon_MF_List03.png')</Col></Row></Rows>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_test", this);
            obj.set_firefirstcount("0");
            obj.getSetter("firenextcount").set("0");
            obj.set_useclientlayout("false");
            obj.set_updatecontrol("true");
            obj.set_enableevent("true");
            obj.set_loadkeymode("keep");
            obj.set_loadfiltermode("keep");
            obj.set_reversesubsum("false");
            obj._setContents("<ColumnInfo><Column id=\"Column0\" type=\"STRING\" size=\"256\"/><Column id=\"Column1\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"Column1\">test1</Col><Col id=\"Column0\">URL('img::icon_MF_List01.png')</Col></Row><Row><Col id=\"Column1\">tes2</Col><Col id=\"Column0\">URL('img::icon_MF_List02.png')</Col></Row><Row><Col id=\"Column1\">test3</Col><Col id=\"Column0\">URL('img::icon_MF_List01.png')</Col></Row><Row><Col id=\"Column1\">test4</Col><Col id=\"Column0\">URL('img::icon_MF_List01.png')</Col></Row><Row><Col id=\"Column1\">test5</Col><Col id=\"Column0\">URL('img::icon_MF_List03.png')</Col></Row></Rows>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_schedulelist", this);
            obj._setContents("<ColumnInfo><Column id=\"userid\" type=\"STRING\" size=\"256\"/><Column id=\"eventdate\" type=\"STRING\" size=\"256\"/><Column id=\"eventtitle\" type=\"STRING\" size=\"256\"/><Column id=\"eventmain\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_result", this);
            obj._setContents("<ColumnInfo><Column id=\"userid\" type=\"STRING\" size=\"256\"/><Column id=\"eventdate\" type=\"STRING\" size=\"256\"/><Column id=\"eventmain\" type=\"STRING\" size=\"256\"/><Column id=\"eventtitle\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);

            obj = new Dataset("ds_result_all", this);
            obj._setContents("<ColumnInfo><Column id=\"userid\" type=\"STRING\" size=\"256\"/><Column id=\"eventdate\" type=\"STRING\" size=\"256\"/><Column id=\"eventmain\" type=\"STRING\" size=\"256\"/><Column id=\"eventtitle\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            
            // UI Components Initialize
            obj = new Grid("grd_output", "absolute", "6", "48", "95.38%", "335", null, null, this);
            obj.set_taborder("0");
            obj.set_binddataset("ds_data");
            obj.set_selecttype("cell");
            obj.set_useselcolor("false");
            obj.set_autofittype("col");
            obj._setContents("<Formats><Format id=\"default\"><Columns><Column size=\"150\"/><Column size=\"145\"/><Column size=\"145\"/><Column size=\"145\"/><Column size=\"145\"/><Column size=\"145\"/><Column size=\"145\"/></Columns><Rows><Row size=\"18\" band=\"head\"/><Row size=\"12\" band=\"head\"/><Row size=\"57\"/></Rows><Band id=\"head\"><Cell text=\"◀\"/><Cell col=\"1\" colspan=\"5\"/><Cell col=\"6\" text=\"▶\"/><Cell row=\"1\" style=\"color:red\" text=\"SUN\"/><Cell row=\"1\" col=\"1\" text=\"MON\"/><Cell row=\"1\" col=\"2\" text=\"TUE\"/><Cell row=\"1\" col=\"3\" text=\"WED\"/><Cell row=\"1\" col=\"4\" text=\"THU\"/><Cell row=\"1\" col=\"5\" text=\"FRI\"/><Cell row=\"1\" col=\"6\" style=\"color:blue\" text=\"SAT\"/></Band><Band id=\"body\" style=\"cellbackground:white;cellbackground2:white;cellcolor:black;cellcolor2:black;\"><Cell style=\"align:center top;color:red;color2:red;\" text=\"bind:COL_D0\"/><Cell col=\"1\" style=\"align:center top;\" text=\"bind:COL_D1\"/><Cell col=\"2\" style=\"align:center top;\" text=\"bind:COL_D2\"/><Cell col=\"3\" style=\"align:center top;\" text=\"bind:COL_D3\"/><Cell col=\"4\" style=\"align:center top;\" text=\"bind:COL_D4\"/><Cell col=\"5\" style=\"align:center top;\" text=\"bind:COL_D5\"/><Cell col=\"6\" style=\"align:center top;color:blue;color2:blue;\" text=\"bind:COL_D6\"/></Band></Format></Formats>");
            this.addChild(obj.name, obj);

            obj = new Static("Static12", "absolute", "0", "395", "97.5%", "29.41%", null, null, this);
            obj.set_taborder("1");
            obj.set_cssclass("sta_MF_TodoArea");
            this.addChild(obj.name, obj);

            obj = new Static("Static02", "absolute", "36", "529", "85", "15", null, null, this);
            obj.set_taborder("2");
            obj.set_text("12");
            obj.set_cssclass("sta_MF_Number");
            this.addChild(obj.name, obj);

            obj = new Static("Static01", "absolute", "36", "453", "68", "48", null, null, this);
            obj.set_taborder("3");
            obj.set_text("29");
            obj.set_usedecorate("true");
            obj.set_cssclass("sta_MF_SelectDay");
            this.addChild(obj.name, obj);

            obj = new Static("Static00", "absolute", "14", "400", "178", "36", null, null, this);
            obj.set_taborder("4");
            obj.set_text("Today's schedule");
            obj.set_cssclass("sta_MF_TodoTitle");
            this.addChild(obj.name, obj);

            obj = new Grid("Grid00", "absolute", "159", "448", "123", "93", null, null, this);
            obj.set_cssclass("grd_MF_TodoList");
            obj.set_taborder("5");
            obj.set_binddataset("ds_todaysschedule");
            obj.set_autofittype("col");
            obj.set_scrollbars("none");
            obj._setContents("<Formats><Format id=\"default\"><Columns><Column size=\"22\"/><Column size=\"175\"/></Columns><Rows><Row size=\"18\"/></Rows><Band id=\"body\"><Cell displaytype=\"image\" text=\"bind:Column0\"/><Cell col=\"1\" text=\"bind:Column1\"/></Band></Format></Formats>");
            this.addChild(obj.name, obj);

            obj = new Button("Button00", "absolute", "239", "417", "56", "17", null, null, this);
            obj.set_taborder("6");
            obj.set_cssclass("btn_MF_TodoView");
            obj.set_text("   더보기");
            obj.style.set_background("URL('img::btn_MF_TodoView.png') left middle");
            this.addChild(obj.name, obj);

            obj = new Static("Static03", "absolute", "100", "485", "36", "22", null, null, this);
            obj.set_taborder("8");
            obj.set_text("st");
            obj.set_usedecorate("true");
            obj.set_cssclass("sta_MF_SelectDay");
            obj.style.set_font("bold antialias 21 Arial");
            this.addChild(obj.name, obj);

            obj = new Static("Static04", "absolute", "1.94%", "6", null, "34", "1.69%", null, this);
            obj.set_taborder("9");
            obj.set_text("Schedule");
            obj.style.set_align("center middle");
            obj.style.set_font("15 arial");
            this.addChild(obj.name, obj);


            
            // Layout Functions
            //-- Default Layout
            obj = new Layout("default", "", 350, 561, this,
            	//-- Layout function
            	function(p) {
            		p.set_classname("V_SCD_001");
            		p.set_titletext("New Form");
            		p.set_scrollbars("none");

            	}
            );
            this.addLayout(obj.name, obj);


            
            // BindItem Information

            
            // Remove Reference
            obj = null;
        };
        

        
        // User Script
        this.registerScript("V_MAIN_001_left.xfdl", function() {
        this.fv_CurYear = 0;
        this.fv_CurMonth = "";
        	var objDate = new Date();
        	var fYear	= objDate.getYear();
            var fMonth	= objDate.getMonth() + 1;
            if(fMonth.toString().length == 1){
              fMonth = "0" + fMonth;
            }
        	var fDay	= objDate.getDate();
        	var fDate = fYear + "-" + fMonth + "-" + fDay;

        
        this.execute_onload = function(obj,e){
        	this.fn_drawCalendar();
        }

        this.data_load = function(){
        	this.ds_schedulelist.deleteAll();
        	this.ds_schedulelist.addRow();
        	this.ds_schedulelist.setColumn(0,"userid",application.gds_userInfo.getColumn(0,"userid"));
        	this.ds_schedulelist.setColumn(0,"eventdate",fDate);
        	this.fn_schedule_loading("search","scheduleselectVO.do","input1=ds_schedulelist","ds_result=output1");	
        	this.fn_schedule_loading("search","schedulelist.do","input1=ds_schedulelist","ds_result_all=output1");
            
            this.ds_menu.assign(application.gds_hiddenMenu);
            
            this.fn_show_detail(fDay,this.ds_result.getRowCount(),this.ds_result);
        	this.fn_drawCalendar(this.ds_data, this.grd_output, fYear, fMonth);
            this.calset();
        }

        this.fn_drawCalendar = function(objDS,objGrid,sYear,sMonth)
        {
            this.fv_CurYear  = sYear;
            this.fv_CurMonth = sMonth.toString().padLeft(2, '0');

            // Grid Header
            objGrid.setCellProperty("Head", 1, "text", sYear + "년" + " "+ sMonth + "월");

            objDS.clearData();
            
            var sCurDateF = sYear  + "-" + this.fv_CurMonth + "-" + "01";

            var objDate = new Date(sCurDateF);
            var nStartDay = objDate.getDay();

            var nLastDate = 0;
            var nMonth = parseInt(sMonth, 10);
            if (nMonth == 1 || nMonth == 3 || nMonth == 5 || nMonth == 7  || nMonth == 8 || nMonth == 10 || nMonth == 12)
            {
                nLastDate = 31;
            }
            else if (nMonth == 2)  
            {
                var nYear = parseInt(sYear, 10);
                if ((nYear % 4) == 0) 
                {
                    if ((nYear % 100) != 0 || (nYear % 400) == 0)
                    {
                        nLastDate = 29;
                    }
                    else
                    {
                        nLastDate = 28;
                    }
                } 
                else
                {
                    nLastDate = 28;
                }
            } 
            else
            {
                nLastDate = 30;
            }    
                
            var day;
            var nRow = objDS.addRow();
        	
        	var pday;
        	var size = this.ds_result_all.getRowCount();
        	
            
            for (var i = 1, day = nStartDay; i <= nLastDate; i++ )
            {
                objDS.setColumn(nRow, "COL_D"+day, i);
                      
        		var dd = objDS.getColumn(nRow, "COL_D"+day);
        	
        		for(var j=0; j< size; j++){
        		var bb = this.ds_result_all.getColumn(j,"eventdate");
        		var mo = bb.substring(5,7);
        		if(mo<10){
        		mo = bb.substring(6,7);
        		}else{
        		mo = bb.substring(5,7);
        		}
        		if(mo==sMonth){
        		var aa = bb.substring(8,10);
        		if(aa<10){
        		pday = bb.substring(9,10);
        		}else{
        		pday = aa;
        		}
        		if(dd==pday){
                objDS.setColumn(nRow, "COL_D"+day, i+"\n"+"\n"+"★");
                }
        		}
        		}
                day = (day + 1) % 7;
                if (day == 0 && i != nLastDate)
                {
                    nRow = objDS.addRow();
                }
            }
        }

        this.grd_output_onheadclick = function(obj,e)
        {
            var objDate = new Date(this.fv_CurYear + "-" + this.fv_CurMonth + "-" + "01");

            if (e.cell == 0)
            {
                objDate.setMonth(objDate.getMonth() - 1);
                this.fn_drawCalendar(this.ds_data, this.grd_output, objDate.getYear(), objDate.getMonth()+1);
            }
            else if( e.cell == 2 )
            {
                objDate.setMonth(objDate.getMonth() +1);
                this.fn_drawCalendar(this.ds_data, this.grd_output, objDate.getYear(), objDate.getMonth()+1);
            }    
        }
        this.calset = function(){
        	 objDate.setMonth(objDate.getMonth() - 1);
                this.fn_drawCalendar(this.ds_data, this.grd_output, objDate.getYear(), objDate.getMonth()+1);
             objDate.setMonth(objDate.getMonth() +1);
                this.fn_drawCalendar(this.ds_data, this.grd_output, objDate.getYear(), objDate.getMonth()+1);
        }

        this.grd_output_oncellclick = function(obj,e)
        {
        	var year = this.fv_CurYear;
        	var month = this.fv_CurMonth;
        	var selectedRow = this.grd_output.getSelectedRows();
        	var selectedCell = this.grd_output.getCellPos();
        	
        	var ldate = this.ds_data.getColumn(selectedRow,selectedCell);
        	var cdate = ldate.substring(0,2);
        	if(cdate<10){
        	var day = "0"+ldate.substring(0,1);
        	}else{
        	var day = ldate.substring(0,2);
        	}

        	var date = year + "-" + month + "-" + day;
        	application.gds_date.clearData();
        	application.gds_date.addRow();
        	application.gds_date.setColumn(0,"date",date);	
        	//application.gds_date.getColumn(0);
        	//alert(date);
        	this.fn_goPage(4);
        }

        //화면전환
        this.fn_goPage = function(page)
        {
        	var oObj = {
                  ds    : this.ds_menu,    // 메뉴 dataset 
                  nRow  : page,              // 선택된 
                  oArgs : []               // 넘길 argument
            };
            Iject.Mdi.call(this,oObj);
            trace("이동 체크 :"+oObj.nRow);
        }

        //오늘 스케쥴 가져오기
        this.fn_schedule_loading = function(id,controller,inputds,outputds){
        	var oDatas =  {
        			  svcid : id,
        			  sController : controller,			 
        			  inds :[inputds],
        			  outds :[outputds],			     
        			  args  : [ ],
        			  bAsync : false,    // 비동기여부 (true : async  false: sync)
        			  nDataType : 0,   // (0: XML타입, 1: 이진 타입, 2: SSV 타입)
        			  bCompress :false,	 //			  
        			}; 
        			
        	Iject.transaction(this,oDatas,function(){  		
        		if(this.errorcode < 0){
        		   Iject.alert(this.errorMsg,"알림");	
        		   return;
        		}			      
        	      var pThis = this.fobj;   //form object
        	       
        	      switch(this.svcid){
        	         case "save" : 
        				Iject.alert("저장완료");
        				break;
        	      } 
        	       var pThis = this.fobj;   //form object	      
        	       trace(" ds_user : " + pThis.ds_result.saveXML());	       
        });
        }

        
        //캘린더와 연동된 상세보기
        this.fn_show_detail = function(inDate/*보여줄 날짜*/,inItmNum/*날짜에 따른 일정 갯수*/,inCal_ds/*날짜에 따른 dataset*/){
        	trace("show_detail들어감 : "+inDate+"//"+inItmNum+"//"+inCal_ds.getColumn(0,"eventdate"));
        	var objDate = new Date();
        	//var sDate = objDate.getDate();
        	var sDate = inDate;
            var surfix = "";
            var itmNum = inItmNum;
            
            if(sDate.toString().length == 1){
              sDate = "0" + sDate;
            }
            if(sDate == "01"){	serfix = "st";	}else
            if(sDate == "02"){	serfix = "nd";	}else
            if(sDate == "03"){	serfix = "rd";	}
            else{	serfix = "th";	}
            
            this.Static01.set_text(sDate);
        	this.Static03.set_text(serfix);
        	this.Static02.set_text(itmNum);
        	
        	this.ds_todaysschedule.deleteAll();
        	var j=1;
        	var limit = inCal_ds.getRowCount();
        	if( limit >= 5){
        		limit = 5;
        		}
        	for(var i = 0; i < limit; i++){
        		this.ds_todaysschedule.addRow();
        		this.ds_todaysschedule.copyRow(i,inCal_ds,i,"Column1=eventtitle");
        		this.ds_todaysschedule.setColumn(i,"Column0","URL('img::icon_MF_List0"+j+".png')");
        		if(j<3){	j++;	}else{	j=1;	}
        	}
        }

        
        //today's schedule grid 클릭시 동작
        this.fn_grid_action = function(obj,e){
        	var row = e.row;
        	var date = this.ds_result.getColumn(row,"eventdate");
        	date = date.slice(0,date.indexOf(" "));
        	//trace("날짜 splice확인 : "+date);	
        	application.gds_date.clearData();
        	application.gds_date.addRow();
        	application.gds_date.setColumn(0,"date",date);	
        	this.fn_goPage(4);	//date에서 시간값을 가져가야함 //우석씨 코드에 추가
        }

        //더보기 버튼 클릭 시
        this.Button00_onclick = function(obj,e){
        	var date = this.ds_result.getColumn(0,"eventdate");
        	date = date.slice(0,date.indexOf(" "));
        	//trace("날짜 splice확인 : "+date);	
        	application.gds_date.clearData();
        	application.gds_date.addRow();
        	application.gds_date.setColumn(0,"date",date);	
        	this.fn_goPage(4);
        }
        
        });


        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.grd_output.addEventHandler("onheadclick", this.grd_output_onheadclick, this);
            this.grd_output.addEventHandler("oncellclick", this.grd_output_oncellclick, this);
            this.Static12.addEventHandler("onclick", this.Static12_onclick, this);
            this.Grid00.addEventHandler("oncellclick", this.fn_grid_action, this);
            this.Button00.addEventHandler("onclick", this.Button00_onclick, this);

        };

        this.loadIncludeScript("V_MAIN_001_left.xfdl");

       
    };
}
)();
