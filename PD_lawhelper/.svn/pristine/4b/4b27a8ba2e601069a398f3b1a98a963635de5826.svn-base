(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        this.on_create = function()
        {
            // Declare Reference
            var obj = null;
            
            if (Form == this.constructor) {
                this.set_name("apapapap");
                this.set_classname("apapapap");
                this.set_titletext("New Form");
                this._setFormPosition(0,0,1000,600);
            }

            
            // Object(Dataset, ExcelExportObject) Initialize

            
            // UI Components Initialize

            
            // Layout Functions
            //-- Default Layout
            obj = new Layout("default", "", 1000, 600, this,
            	//-- Layout function
            	function(p) {
            		p.set_classname("apapapap");
            		p.set_titletext("New Form");

            	}
            );
            this.addLayout(obj.name, obj);


            
            // BindItem Information

            
            // Remove Reference
            obj = null;
        };
        

        
        // User Script
        this.addIncludeScript("apapapap.xfdl", "Lib::Comm.xjs");
        this.registerScript("apapapap.xfdl", function() {

        //include "Lib::Comm.xjs";
        var insertYn="n";
        //로딩시
        this.form_onload = function(obj,e)
        {
        insertYn="n";
        var url="Pattern::APPRLINE";
        fcs(url);
        ds_appr.ClearData();
        ds.appr.AddRow();
        search_form();
        }
        //추가 버튼 클릭시
        this.Button00_onclick = function(obj,e)
        {
        if(insertYn=="y"){
        	alert("등록을 완료한 후에 새로 추가하세요");
        	return;
        }
        insertYn="y";
        	ds_apprIn.ClearData();
        	ds_apprIn.AddRow();
        	Grid_appr.Enable=false;
        	gb_row=Grid_appr.GetClickedRow()+1;
        	ds_appr.InsertRow(gb_row);
        	insaSabun.text="";
        	insaDept.text="";
        	line_com.Enable="true";
        	lineSeq_com.Enable="true";
        	yn_com.Enable="true";

        	ds_apprIn.SetColumn(0,"aprvlineAdmProcCode",ds_new.Getcolumn(0,"aprvlineAdmProcCode"));
        	
        	var seq=ToInteger(ds_new.GetColumn(0,"aprvlineAdmSeq"))+1;
        	if(ds_new.GetColumn(0,"aprvlineAdmSeq")=="3"){
        		alert("3차에서는 추가할수 없습니다");
        		ds_apprIn.ClearData();
        		ds_apprIn.AddRow();
        	}else{
        		if(seq=="4"){
        			lineSeq_com.text="3";
        			lineUpSeq_com.text="2";
        		}else if(seq=="3"){
        			lineSeq_com.text=seq;
        			lineUpSeq_com.text="2";
        			yn_com.text="Y";
        		}else{
        			lineSeq_com.text=seq;
        			lineUpSeq_com.text="1";
        			yn_com.text="N";
        		}	
        		if(lineSeq_com.text=="1"){
        			lineUpSeq_com.text="*";
        			insaUpId.text="***";
        		}	
        	}
        	
        	if(lineSeq_com.text=="1"){
        		lineUpSeq_com.text="*";
        		insaUpId.text="***";	
        	}else{
        		
        		insaUpId.text=ds_new.GetColumn(0,"insaName")+"("+ds_new.GetColumn(0,"aprvlineAdmAprvId")+")";
        		
        	}	
        }
        	//결재라인조회
        function search_form(code,seq,id){
        	
        	var strSvcid = "approvalLineList";
        	var strUrl = "svc::apprLine/ApprovalLineList.do";
        	var strInputDs = ""; 
        	var strOutputDs = "ds_appr = ds_output";
        	var strParam = "code_no=" + Quote(code)+" seq=" + Quote(seq) + " id=" + Quote(id);
        	var strFnCallback="fncallback";
        	
        	transaction(strSvcid
        				, strUrl
        				, strInputDs
        				, strOutputDs
        				, strParam	
        				, strFnCallback);
        } 
        //결재라인조회 코드별
        function search_code(code,seq,id){
        	
        	var strSvcid = "approvalLineList";
        	var strUrl = "svc::apprLine/ApprovalLineListCode.do";
        	var strInputDs = ""; 
        	var strOutputDs = "ds_appr = ds_output";
        	var strParam = "code_no=" + Quote(code);
        	var strFnCallback="fncallback";
        	
        	transaction(strSvcid
        				, strUrl
        				, strInputDs
        				, strOutputDs
        				, strParam	
        				, strFnCallback);
        }
        //결재라인삭제
        function btn_delete_OnClick(obj)
        {
        	Grid_appr.Enable=true;
        	
        	if(Confirm("삭제하시겠습니까?")==true){
        		if(insertYn=="y"){
        			ds_appr.DeleteRow(gb_row);
        			insertYn="n";
        		}else{
        			var code_no=ds_appr.GetColumn(Grid_appr.GetClickedRow(), 'aprvlineAdmProcCode');
        			var seq_no=ds_appr.GetColumn(Grid_appr.GetClickedRow(), 'aprvlineAdmSeq');
        			var id_no=ds_appr.GetColumn(Grid_appr.GetClickedRow(), 'aprvlineAdmAprvId');
        			var yn="n";
        			for(var i=0;i<ds_appr.rowcount;i++){
        				if(ds_appr.GetColumn(gb_row,"aprvlineAdmProcCode")==ds_appr.GetColumn(i,"aprvlineAdmProcCode")&&ds_appr.GetColumn(gb_row,"aprvlineAdmSeq")==ds_appr.GetColumn(i,"aprvlineAdmUpSeq")&&ds_appr.GetColumn(gb_row,"aprvlineAdmAprvId")==ds_appr.GetColumn(i,"aprvlineAdmUpId")){
        					alert("상위 결재자를 먼저 삭제하세요");
        					yn="n";
        					break;
        				}else{
        					yn="y";
        				}
        			}
        			if(yn=="y"){
        				var strSvcid = "apprDelete";
        				var strUrl = "svc::apprLine/deleteappr.do";
        				var strInputDs = "";
        				var strOutputDs = "";
        				
        				var strParam = "code_no=" + Quote(code_no) + " seq_no=" + Quote(seq_no) + " id_no=" + Quote(id_no);	 
        				var strFnCallback = "fnCallback";
        				
        				
        				transaction(strSvcid
        							, strUrl
        							, strInputDs
        							, strOutputDs
        							, strParam
        							, strFnCallback);	
        			}
        		}
        	}else{
        		return;					
        	}	
        						
        }
        		
        //결재라인등록, 수정
        function apprSave(obj){
        	var strSvcID = "apprLineInsert";	
        	var strURL= "svc::apprLine/insertappr.do";
        	var strInDatasets="ds_input=ds_apprIn:u";
        	var strOutDatasets="";
        	var strArgument="voClass='pdsystem.apprLine.model.ApprLineVo'";
        	var strCallbackFunc	="fnCallback";	
        		
        		Transaction(strSvcID,
        					strURL,
        					strInDatasets,
        					strOutDatasets,
        					strArgument,
        					strCallbackFunc);							
        }
        		//결재단계코드값이 바뀔때
        function line_com_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
        {
        	if(lineSeq_com.text=="1"){
        		lineUpSeq_com.text="*";	
        		yn_com.text="N";
        		insaUpId.text="***";
        	}else if(lineSeq_com.text=="2"){
        		lineUpSeq_com.text="1";	
        		yn_com.text="N";
        	}else{
        		lineUpSeq_com.text="2";
        		yn_com.text="Y";
        	}
        		
        }

        //결재라인순번값이 바뀔때
        function lineSeq_com_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
        {
        		if(lineSeq_com.text=="1"){
        			lineUpSeq_com.text="*";	
        			yn_com.text="N";
        			insaUpId.text="***";
        		}else if(lineSeq_com.text=="2"){
        			lineUpSeq_com.text="1";	
        			yn_com.text="N";
        		}else{
        			lineUpSeq_com.text="2";
        			yn_com.text="Y";
        		}
        		
        }

        //저장버튼 클릭시
        this.Button02_onclick = function(obj,e)
        {
        	
        	insertYn="n";
        	if(insaSabun.text==""){
        		alert("결재자를 등록해주세요");
        	}else{	
        		ds_apprIn.SetColumn(0,"aprvlineAdmAprvId",SubStr(insaSabun.text,4,10));
        		if(SubStr(insaDept.text,0,1)=="S"){
        			ds_apprIn.SetColumn(0,"aprvlineAdmAprvDeptId",SubStr(insaDept.text,6,3));
        		}else{
        			ds_apprIn.SetColumn(0,"aprvlineAdmAprvDeptId",SubStr(insaDept.text,4,3));
        		}
        		if(SubStr(insaUpId.text,0,1)=="*"){
        			ds_apprIn.SetColumn(0,"aprvlineAdmUpId","***");
        		}else{
        			ds_apprIn.SetColumn(0,"aprvlineAdmUpId",SubStr(insaUpId.text,4,10));
        		}
        		if(line_com.text=="채무자등록"){
        			if(lineSeq_com.text=="1"){
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","***");
        			}else{
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","001");
        			}	
        		}else if(line_com.text=="채무발생"){
        			if(lineSeq_com.text=="1"){
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","***");
        			}else{
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","002");
        			}
        		}else if(line_com.text=="채무정지"){
        			if(lineSeq_com.text=="1"){
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","***");
        			}else{
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","003");
        			}	
        		}else{
        			if(lineSeq_com.text=="1"){
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","***");
        			}else{
        				ds_apprIn.SetColumn(0,"AprvlineAdmUpAprvcode","004");
        			}
        		}
        		
        		apprSave();
        	}
        }		
        //검색버튼 클릭시 사원조회
        this.btn_search_onclick = function(obj,e)
        {
        	var objChildFrame = new ChildFrame();
            objChildFrame.init("chf_popup1", "absolute", 30, 30, 30, 30, null, null, "Pattern::POP_APPRLINE.xfdl");
            var objParam = {};
            objChildFrame.showModal(this.getOwnerFrame(), objParam, this, "fn_popupCallback");
            //자식프레임을 이용해 팝업창을 띄운다.
            //쓰는 이유 : this.close(data) - 팝업이 종료되고 data의 데이터를 가져오게 된다.
        }

        this.fn_popupCallback = function(strID,Text)
        {
        	
        	if(Text!=undefined)
        	{
        		trace("결과 : "+Text);
        		this.insaSabun.set_value(Text);
        	}
        	else
        	{
        		return false;
        	}
        }

        //그리드 셀 클릭시
        function Grid_appr_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
        {
        	ds_new.AddRow();
        	gb_row=Grid_appr.GetClickedRow();
        	lineSeq_com.Enable=false;
        	ds_new.SetColumn(0,"aprvlineAdmProcCode",ds_appr.Getcolumn(nRow,"aprvlineAdmProcCode"));
        	ds_new.SetColumn(0,"aprvlineAdmSeq",ds_appr.Getcolumn(nRow,"aprvlineAdmSeq"));
        	ds_new.SetColumn(0,"aprvlineAdmAprvId",ds_appr.Getcolumn(nRow,"aprvlineAdmAprvId"));
        	ds_new.SetColumn(0,"aprvlineAdmAprvDeptId",ds_appr.Getcolumn(nRow,"aprvlineAdmAprvDeptId"));
        	
        	ds_new.SetColumn(0,"AprvlineAdmUpAprvcode",ds_appr.Getcolumn(nRow,"AprvlineAdmUpAprvcode"));
        	ds_new.SetColumn(0,"aprvlineAdmUpSeq",ds_appr.Getcolumn(nRow,"aprvlineAdmUpSeq"));
        	ds_new.SetColumn(0,"aprvlineAdmAdWtr",ds_appr.Getcolumn(nRow,"aprvlineAdmAdWtr"));
        	ds_new.SetColumn(0,"aprvlineAdmUpId",ds_appr.Getcolumn(nRow,"aprvlineAdmUpId"));	
        	ds_new.SetColumn(0,"insaName",ds_appr.Getcolumn(nRow,"insaName"));
        	
        	insaSabun.text=ds_appr.GetColumn(nRow,"insaName")+"("+ds_appr.GetColumn(nRow,"aprvlineAdmAprvId")+")";
        	insaDept.text=ds_appr.GetColumn(nRow,"aprvlineAdmAprvDeptId");
        	
        	var code=ds_appr.Getcolumn(nRow,"aprvlineAdmProcCode");
        	var seq=ds_appr.GetColumn(nRow,"aprvlineAdmSeq");
        	var id=ds_appr.GetColumn(nRow,"aprvlineAdmAprvId");
        	var idd=ds_appr.GetColumn(nRow,"aprvlineAdmUpId");
        	
        	var strSvcid = "apprLineDetailList";
        	var strUrl = "svc::apprLine/ApprLineDetailList.do";
        	var strInputDs = ""; 
        	var strOutputDs = "ds_apprIn = ds_output";
        	var strParam = "code=" + Quote(code)+" seq=" + Quote(seq) + " id=" + Quote(id);
        	var strFnCallback="fncallback";
        	
        	transaction(strSvcid
        				, strUrl
        				, strInputDs
        				, strOutputDs
        				, strParam	
        				, strFnCallback);
        	line_com.Enable="false";		
        	yn_com.Enable="true";	
        	
        	var strSvcid = "apprNameList";		
        	var strUrl = "svc::apprLine/ApprovalList.do";
        	var strInputDs ="";
        	var strOutputDs = "ds_insa = ds_output";
        	var strParam="sabun=" + Quote(idd);
        	var strFnCallback="fncallback";
        	
        	transaction(strSvcid
        				, strUrl
        				, strInputDs
        				, strOutputDs
        				, strParam	
        				, strFnCallback);	
        }

        

        	//LIST_COM 콤보박스 값이 바뀔때	
        function list_com_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
        {
        	var code=list_com.text;
        	if(code=="전체"){
        		search_form();
        	}else{
        		if(code=="채무자등록"){
        			code="001";	
        		}else if(code=="채무발생"){
        			code="002";	
        		}else if(code=="채무정지"){
        			code="003";	
        		}else{
        			code="004";	
        		}
        		search_code(code);
        	}
        }
        //저장,수정,삭제  callback함수
        function fnCallback(svcid,errcd,errmsg){
        	if(svcid == "approvalLineList"){	
        		
        		ds_appr.row=gb_row;	
        		
        		
        	}
        	if(svcid == "apprLineInsert"){
        		if(errcd == 0){
        			Grid_appr.Enable=true;
        			if(yn_com.text=="N"&&lineSeq_com.text!="3"){
        					
        				alert("저장되었습니다.");
        				var line=line_com.text;
        				if(SubStr(line,2,2)=="자발"){
        					var lineUp="***";
        				}else if(SubStr(line,2,2)=="발생"){
        					var lineUp="001";
        				}else if(SubStr(line,2,2)=="정지"){
        					var lineUp="002";
        				}else{
        					var lineUp="003";
        				}
        				
        				var lineSeq=ToInteger(lineSeq_com.text)+1;
        				var lineUpSeq=ToInteger(lineSeq_com.text);
        				var insa=insaSabun.text;
        				
        				ds_apprIn.ClearData();
        				ds_apprIn.AddRow();
        				
        				search_form();
        				
        				line_com.text=line;
        				lineSeq_com.text=lineSeq;
        				lineUpSeq_com.text=lineUpSeq;
        				if(lineSeq_com.Text=="1"){
        					insaUpId.text="***";
        				}else{
        					insaUpId.text=insa;
        				}
        				if(lineSeq_com.Text=="3"){
        					yn_com.text="Y";
        				}else{
        					yn_com.Text="N";
        				}
        			}else{
        				alert("결재라인이 저장되었습니다");	
        				search_form();
        			}	
        		}else{
        			alert("저장에 실패했습니다");
        		}
        	}
        	if(svcid == "apprDelete"){
        		if(errcd == 0){
        			alert("삭제 되었습니다");
        			
        			search_form();					
        		}else{
        		alert("삭제에 실패했습니다");
        		}
        	}
        	if(svcid == "apprLineupdate"){
        		if(errcd == 0){
        			alert("수정 되었습니다");
        			search_form();
        		}else{
        		alert("수정에 실패했습니다");
        		}
        	}
        	if(svcid=="apprLineDetailList"){
        	
        		if(ds_apprIn.GetColumn(0,"aprvlineAdmAprvDeptId")=="001"){
        			insaDept.text="총무부(001)";
        		}else if(ds_apprIn.GetColumn(0,"aprvlineAdmAprvDeptId")=="002"){
        			insaDept.text="SI사업부(002)";
        		}else{
        			insaDept.text="관리부(003)";
        		}
        		insaSabun.text=ds_apprIn.GetColumn(0,"insaName")+"("+ds_apprIn.GetColumn(0,"aprvlineAdmAprvId")+")";
        	}
        	if(svcid=="apprNameList"){
        		
        		if(ds_insa.GetColumn(0,"insaSabun")==null){
        			insaUpId.text="***";
        			
        		}else{
        			insaUpId.text=ds_insa.GetColumn(0,"insaName")+"("+ds_insa.GetColumn(0,"insaSabun")+")";
        			
        		}
        	}
        }	

        
        	

        

        	

        

        
        
        });


        
        // Regist UI Components Event
        this.on_initEvent = function()
        {

        };

        this.loadIncludeScript("apapapap.xfdl");

       
    };
}
)();
